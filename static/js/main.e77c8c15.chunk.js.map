{"version":3,"sources":["stores/StoreContext.tsx","components/login/Login.tsx","components/Example.tsx","components/common/LinkRouteButton.tsx","components/Navbar.tsx","components/login/Register.tsx","components/products/ProductCard.tsx","appconfig.tsx","components/products/ProductList.tsx","components/chat/ChatMessage.tsx","components/chat/Chat.tsx","App.tsx","serviceWorker.ts","stores/UserStore.ts","index.tsx","stores/RootStore.ts"],"names":["StoreContext","createContext","StoreProvider","children","store","Provider","value","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","observer","classes","history","useHistory","useState","login","setlogin","password","setpassword","userStore","useContext","isUserLogged","useEffect","push","pathname","Container","component","maxWidth","className","Avatar","Typography","variant","noValidate","onSubmit","event","preventDefault","authorizeUser","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","type","Button","color","onClick","root","padding","item","counter","setcounter","Paper","LinkRouteButton","to","location","createStyles","flexGrow","menuButton","marginRight","title","userLabel","marginLeft","user","logout","AppBar","position","Toolbar","IconButton","edge","aria-label","username","Chip","clickable","icon","Register","elevation","minWidth","ProductCard","product","handleDeleteProduct","canModify","isGoodQuality","Card","CardActionArea","CardContent","gutterBottom","CardActions","disabled","AppConfig","apiUrl","marginBottom","ProductList","authToken","isModerator","loading","setloading","error","seterror","products","setproducts","fetchProducts","url","setTimeout","axios","get","headers","Authorization","responseType","then","res","console","log","data","catch","response","status","statusText","finally","deleteProduct","delete","productCards","map","p","key","CircularProgress","severity","purple","getContrastText","deepPurple","typo","wordWrap","ChatMessage","message","nick","time","Divider","ListItem","ListItemAvatar","alt","toUpperCase","ListItemText","primary","Fragment","box","messagebox","paddingTop","boxShadow","inpuitMessage","width","chatBox","maxHeight","minHeight","background","default","defaultMessages","moment","format","Chat","HubConnectionBuilder","withUrl","build","hubConnection","messages","setmessages","chatMessage","setChatMessage","setError","userFullName","useRef","current","scrollTop","scrollHeight","start","on","prev","concat","stop","sendMessage","validate","invoke","err","errorMessage","messegesComponents","m","i","Box","ref","overflow","List","helperText","onKeyUp","CssBaseline","exact","path","Boolean","window","hostname","match","UserStore","makeObservable","this","roles","some","r","observable","computed","action","fetch","method","body","JSON","stringify","json","dataLogin","userId","userName","token","info","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e77c8c15.chunk.js","sourcesContent":["import React, {\r\n  FC,\r\n  createContext,\r\n  ReactNode,\r\n  ReactElement,\r\n  useState,\r\n} from \"react\";\r\nimport { RootStore } from \"./RootStore\";\r\n\r\nexport const StoreContext = createContext<RootStore>({} as RootStore);\r\n\r\nexport type StoreComponent = FC<{\r\n  store: RootStore;\r\n  children: ReactNode;\r\n}>;\r\n\r\nexport const StoreProvider: StoreComponent = ({\r\n  children,\r\n  store,\r\n}): ReactElement => {\r\n  return (\r\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useState } from \"react\";\r\nimport { RootStore } from \"../../stores/RootStore\";\r\nimport { StoreContext } from \"../../stores/StoreContext\";\r\nimport AppConfig from \"../../appconfig\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [login, setlogin] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const {userStore} = useContext(StoreContext);\r\n\r\n  const {isUserLogged} = userStore;\r\n\r\n  useEffect(() => {\r\n    if(isUserLogged){\r\n      const location = {\r\n        pathname: '/home',\r\n    };\r\n      history.push(location);\r\n    }\r\n  })\r\n\r\n  const handleOnChangeLogin = (e: React.ChangeEvent<HTMLInputElement>): void =>\r\n    setlogin(e.target.value);\r\n  const handleOnChangePassword = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ): void => setpassword(e.target.value);\r\n\r\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n    event.preventDefault();\r\n\r\n    userStore.authorizeUser(login, password);\r\n  };\r\n\r\n  const handleOnClickRegister = ()=>{\r\n    userStore.authorizeUser(\"jan\", \"ASDasd123!\");\r\n  //   const location = {\r\n  //     pathname: '/register',\r\n  // };\r\n  //   history.push(location);\r\n  };\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <VpnKeyIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"User Name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={handleOnChangeLogin}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleOnChangePassword}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleOnClickRegister}>Register</Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default observer( Login);\r\n","import { Button, Container, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { StoreContext } from \"../stores/StoreContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(6),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper:{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(3),\r\n  },\r\n  item:{\r\n    margin: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nexport default observer(function Example() {\r\n  const classes = useStyles();\r\n\r\n  const [counter, setcounter] = useState<number>(0);\r\n\r\n  const handleClick = () => setcounter(counter + 1);\r\n\r\n  return (\r\n    <Container className={classes.root} >\r\n      <Typography variant=\"h3\" component=\"h2\">\r\n        Welcome in React SPA APP 🤩!\r\n      </Typography>\r\n      <Paper className={classes.paper}>\r\n      <Typography className={classes.item} variant=\"h5\" component=\"h3\" color=\"primary\">\r\n        Click and see some magic!\r\n      </Typography>\r\n      <Button  variant=\"contained\" onClick={handleClick}>+1</Button>\r\n\r\n      <Typography className={classes.item} variant=\"h6\" component=\"h4\" color=\"primary\">\r\n        Counter: {counter}\r\n      </Typography>\r\n      </Paper>\r\n\r\n    </Container>\r\n  );\r\n});\r\n","import React, {FC} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router';\r\n\r\ntype LinkRouteButtonProps = { \r\n    children: string\r\n };\r\n\r\nconst LinkRouteButton : FC<{to:string}> = ({children, to}) => {\r\n    const history = useHistory();\r\n    const location = {\r\n        pathname: to,\r\n    };\r\n\r\n    const handleOnClick = ()=>{\r\n        history.push(location);\r\n    }\r\n\r\n    return (\r\n        <Button color=\"inherit\" onClick={handleOnClick}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default LinkRouteButton\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport LinkRouteButton from \"./common/LinkRouteButton\";\r\nimport { StoreContext } from \"../stores/StoreContext\";\r\nimport { Chip } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    userLabel: {\r\n      marginLeft: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { user, logout } = useContext(StoreContext).userStore;\r\n\r\n  const handleClickLogout = () => {\r\n    const location = {\r\n      pathname: \"/login\",\r\n    };\r\n    logout();\r\n    history.push(location);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Example SPA app\r\n          </Typography>\r\n\r\n          <LinkRouteButton to=\"/\">Home</LinkRouteButton>\r\n          <LinkRouteButton to=\"products\">Products</LinkRouteButton>\r\n          <LinkRouteButton to=\"chat\">Chat</LinkRouteButton>\r\n\r\n          {user?.username ? (\r\n            <>\r\n              <Chip\r\n                className={classes.userLabel}\r\n                label={`Hello ${user.username}!`}\r\n              />\r\n              <Chip\r\n                label=\"Logout\"\r\n                clickable\r\n                color=\"primary\"\r\n                onClick={handleClickLogout}\r\n                icon={<MeetingRoomIcon />}\r\n              />\r\n            </>\r\n          ) : (\r\n            <LinkRouteButton to=\"login\">Login</LinkRouteButton>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Navbar);\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nfunction Register() {\r\n    return (\r\n\r\n            <Paper elevation={3}>\r\n                Work in Progress\r\n            </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import classes from \"*.module.css\";\r\nimport {\r\n  makeStyles,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { ReactElement } from \"react\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { ProductModel } from \"./ProductList\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 445,\r\n    margin: 10,\r\n    minWidth: 190,\r\n  },\r\n});\r\n\r\ninterface ProductCardProps {\r\n  product: ProductModel;\r\n  handleDeleteProduct: (id: number) => void;\r\n  canModify?: boolean;\r\n}\r\n\r\nfunction ProductCard({\r\n  product,\r\n  handleDeleteProduct,\r\n  canModify = false,\r\n}: ProductCardProps): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  const { id, isGoodQuality, name, color } = product;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Quality product: {isGoodQuality ? \"✔️\" : \"❌\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Color: {color}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Id: {id}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <IconButton\r\n          color=\"secondary\"\r\n          aria-label=\"delete product\"\r\n          component=\"span\"\r\n          onClick={() => handleDeleteProduct(id)}\r\n          disabled={!canModify}\r\n        >\r\n          <DeleteForeverIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","const AppConfig = {\r\n    // apiUrl : \"https://localhost:44328\"\r\n    apiUrl : \"http://net-core-app.us1.gearhost.cloud\"\r\n} \r\n\r\nexport default AppConfig;","import React, { ReactElement, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport { cleanup } from \"@testing-library/react\";\r\nimport axios from \"axios\";\r\nimport AppConfig from \"../../appconfig\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { StoreContext } from \"../../stores/StoreContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  item: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport interface ProductModel {\r\n  id: number;\r\n  name: string;\r\n  color: string;\r\n  isGoodQuality: boolean;\r\n}\r\n\r\ninterface Props {}\r\n\r\nfunction ProductList({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { authToken, isModerator } = useContext(StoreContext).userStore;\r\n\r\n  const [loading, setloading] = useState<boolean>(true);\r\n  const [error, seterror] = useState<string>(\"\");\r\n  const [products, setproducts] = useState<ProductModel[]>(\r\n    [] as ProductModel[]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = () => {\r\n    setloading(true);\r\n    \r\n    setproducts([] as ProductModel[]);\r\n\r\n    const url = AppConfig.apiUrl + \"/api/Product\";\r\n    setTimeout(() => {\r\n      axios\r\n        .get(url, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + authToken,\r\n          },\r\n          responseType: \"json\",\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n\r\n          setproducts(res.data as ProductModel[]);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          if (error.response) {\r\n            console.log(error.response);\r\n            seterror(\r\n              `ERROR request get Products! ${error.response.status} ${error.response.statusText}`\r\n            );\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setloading(false);\r\n        });\r\n    }, 1000);\r\n  };\r\n\r\n  const deleteProduct = (id: number) => {\r\n    setloading(true);\r\n    seterror(\"\");\r\n\r\n    const url = AppConfig.apiUrl + `/api/Product/${id}`;\r\n    axios\r\n      .delete(url, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + authToken,\r\n        },\r\n        responseType: \"json\",\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n          seterror(\r\n            `ERROR remove product API request! ${error.response.status} ${error.response.statusText}`\r\n          );\r\n        }\r\n      })\r\n      .finally(() => {\r\n        fetchProducts();\r\n      });\r\n  };\r\n\r\n  const productCards = products.map((p) => (\r\n    <ProductCard\r\n      key={p.id}\r\n      product={p}\r\n      handleDeleteProduct={deleteProduct}\r\n      canModify={isModerator}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <div className={classes.paper}>\r\n        <Typography\r\n          className={classes.item}\r\n          component=\"h1\"\r\n          variant=\"h5\"\r\n          color=\"primary\"\r\n        >\r\n          Introducing our amazing products:\r\n        </Typography>\r\n        {loading && <CircularProgress />}\r\n        {productCards}\r\n        {error && (\r\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </MuiAlert>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import {\r\n  Divider,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\nimport React, { ReactElement } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  typo: {\r\n    wordWrap: \"break-word\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  message: string;\r\n  nick: string;\r\n  time: string;\r\n}\r\n\r\nfunction ChatMessage({ message, nick, time }: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar className={classes.purple} alt=\"user\">\r\n            {nick[0].toUpperCase()}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          className={classes.typo}\r\n          primary={message}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                {time} - {nick}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;\r\n","import { HubConnectionBuilder } from \"@aspnet/signalr\";\r\nimport { HubConnection } from \"@aspnet/signalr/dist/esm/HubConnection\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  List,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { ReactElement, useContext, useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport AppConfig from \"../../appconfig\";\r\nimport { StoreContext } from \"../../stores/StoreContext\";\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(4),\r\n  },\r\n  messagebox: {\r\n    paddingTop: 0,\r\n    boxShadow: \"inset 5px 5px 15px 5px rgba(0,0,0,0)\",\r\n  },\r\n  inpuitMessage: {\r\n    width: \"100%\",\r\n  },\r\n  chatBox: {\r\n    width: 450,\r\n    maxHeight: 400,\r\n    minHeight: 400,\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    backgroundColor: theme.palette.background.default,\r\n    boxShadow:\r\n      \"inset rgba(0, 0, 0, 0.2) 0px 3px 3px -2px, inset rgba(0, 0, 0, 0.14) 0px 3px 4px 0px, inset rgba(0, 0, 0, 0.12) 0px 1px 8px 0px\",\r\n  },\r\n}));\r\n\r\ninterface ChatMessageModel {\r\n  message: string;\r\n  user: string;\r\n  time: string;\r\n}\r\n\r\nconst defaultMessages: ChatMessageModel[] = [\r\n  {\r\n    message:\r\n      \"Chat 💬 with other website users & feel power of websockets. You can also open the page in a different browser and chat from both!\",\r\n    user: \"Bot\",\r\n    time: moment().format(\"HH:mm:ss\"),\r\n  },\r\n];\r\n\r\nfunction Chat(): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  const [hubConnection] = useState<HubConnection>(\r\n    new HubConnectionBuilder().withUrl(AppConfig.apiUrl + \"/chat\").build()\r\n  );\r\n  const { user } = useContext(StoreContext).userStore;\r\n\r\n  const [messages, setmessages] = useState<ChatMessageModel[]>(defaultMessages);\r\n\r\n  const [chatMessage, setChatMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const nick = user?.userFullName || \"Anonymous\";\r\n\r\n  const box = useRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    if (box.current) {\r\n      box.current.scrollTop = box.current?.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    hubConnection\r\n      .start()\r\n      .then(() => console.log(\"Connection started!\"))\r\n      .catch(() => console.log(\"Error while establishing connection :(\"));\r\n\r\n    hubConnection.on(\"sendToAll\", (user, message, time) => {\r\n      setmessages((prev) => prev.concat({ message, user, time }));\r\n    });\r\n\r\n    return () => {\r\n      hubConnection.stop();\r\n    };\r\n  }, [hubConnection]);\r\n\r\n  const sendMessage = () => {\r\n    if (validate(chatMessage)) {\r\n      hubConnection\r\n        .invoke(\"sendToAll\", nick, chatMessage)\r\n        .then(() => {\r\n          setChatMessage(\"\");\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  };\r\n\r\n  const handleOnPressedEnter = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\") {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChatMessage(e.target.value);\r\n    validate(e.target.value);\r\n  };\r\n\r\n  const validate = (message: string): boolean => {\r\n    const errorMessage = message ? \"\" : \"Write something.\";\r\n    setError(errorMessage);\r\n    return !errorMessage;\r\n  };\r\n\r\n  const messegesComponents = messages.map((m, i) => (\r\n    <ChatMessage key={i} nick={m.user} message={m.message} time={m.time} />\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <Paper className={classes.box}>\r\n        <Typography color=\"primary\" variant=\"h4\" component=\"h5\">\r\n          Chat Box\r\n        </Typography>\r\n        <Box\r\n          {...{ ref: box }}\r\n          boxShadow=\"3\"\r\n          className={classes.chatBox}\r\n          overflow=\"auto\"\r\n        >\r\n          <List className={classes.messagebox}>{messegesComponents}</List>\r\n        </Box>\r\n        <TextField\r\n          error={!!error}\r\n          helperText={error}\r\n          onChange={handleChange}\r\n          onKeyUp={handleOnPressedEnter}\r\n          className={classes.inpuitMessage}\r\n          value={chatMessage}\r\n          autoFocus\r\n        />\r\n        <Button onClick={sendMessage}>Send message</Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  CssBaseline,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Login from \"./components/login/Login\";\r\nimport Example from \"./components/Example\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { observer } from \"mobx-react\";\r\nimport Register from \"./components/login/Register\";\r\nimport ProductList from \"./components/products/ProductList\";\r\nimport Chat from \"./components/chat/Chat\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Navbar />\r\n\r\n      <Switch>\r\n\r\n        <Route exact path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route exact path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n        <Route exact path=\"/products\">\r\n          <ProductList />\r\n        </Route>\r\n        <Route exact path=\"/chat\">\r\n          <Chat />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Example />\r\n        </Route>\r\n\r\n        {/* <PrivateRoute path=\"/protected\">\r\n        <Example />\r\n      </PrivateRoute> */}\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { observable, action, makeObservable, computed } from \"mobx\";\r\nimport { authUser, UserLoginResponse } from \"../services/UserService\";\r\nimport AppConfig from \"../appconfig\";\r\n\r\nexport interface UserData {\r\n  id:string;\r\n  username: string;\r\n  userFullName: string;\r\n  roles: string[];\r\n}\r\n\r\nexport default class UserStore {\r\n  constructor() {\r\n    makeObservable(this);\r\n  }\r\n\r\n  @observable\r\n  user: UserData = {} as UserData;\r\n\r\n  @observable\r\n  public authToken: string | null = null;\r\n\r\n  @computed\r\n  public get isUserLogged(){ return !!this.user?.username && !!this.authToken};\r\n\r\n  @computed\r\n  public get isModerator(){ return !!this.user?.roles?.some(r => r === \"Moderator\" || r === \"Administrator\") && this.isUserLogged};\r\n\r\n  @action\r\n  public logout = () =>{\r\n    this.user.username = '';\r\n    this.authToken = null;\r\n  }\r\n\r\n  @action\r\n  authorizeUser = (login: string, password: string) => {\r\n\r\n    fetch(AppConfig.apiUrl + \"/api/authentication/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ username: login, password }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status == 200) {\r\n          response.json().then((data) => {\r\n            const dataLogin = data as UserLoginResponse;\r\n            this.user = {\r\n              id: dataLogin.userId,\r\n              username: dataLogin.userName,\r\n              userFullName: dataLogin.userFullName,\r\n              roles: dataLogin.roles,\r\n            };\r\n            this.authToken = dataLogin.token;\r\n          });\r\n        } else {\r\n          response.json().then((data) => {\r\n            console.info(\"Api response\", data);\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        return \"error\";\r\n      });\r\n\r\n    return null;\r\n  };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport UserStore from \"./stores/UserStore\";\nimport { Provider } from \"mobx-react\";\nimport { StoreProvider } from \"./stores/StoreContext\";\nimport { RootStore } from \"./stores/RootStore\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst stores = {\n  userStore: new UserStore(),\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={new RootStore()}>\n      <Router>\n        <App />\n      </Router>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import UserStore from './UserStore';\r\n\r\n\r\nexport class RootStore {\r\n  userStore: UserStore;\r\n\r\n  constructor() {\r\n    this.userStore = new UserStore(); \r\n  }\r\n}"],"sourceRoot":""}